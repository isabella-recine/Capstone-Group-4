USE ROLE de;
USE WAREHOUSE COMPUTE_WH;
USE DATABASE CAPSTONE_DE;
USE SCHEMA EXTERNAL_STAGE;

CREATE OR REPLACE STAGE CAPSTONE_DE.EXTERNAL_STAGE.GROUP4_CAPSTONE_ACCIDENT_DATA_AWS_STAGE
        --STORAGE_INTEGRATION = s3_int
        URL='s3://capstone-techcatalyst-transformed/group4/accident_data/'
        CREDENTIALS=(AWS_KEY_ID='' AWS_SECRET_KEY='')
        FILE_FORMAT=(TYPE='PARQUET');

list @GROUP4_CAPSTONE_ACCIDENT_DATA_AWS_STAGE;

SELECT *
FROM @GROUP4_CAPSTONE_ACCIDENT_DATA_AWS_STAGE/YEAR=2023/MONTH=09/part-00000-tid-4360066916207688014-b62650a7-ac5b-4492-9e14-10ab25343955-489-1.c000.snappy.parquet
(FILE_FORMAT => 'parquet_format');

CREATE OR REPLACE TABLE CAPSTONE_DE.GROUP_4.ACCIDENT_STAGING AS 
    SELECT
        $1:"BOROUGH"::STRING AS BOROUGH,
        $1:"COLLISION_ID"::INTEGER AS COLLISION_ID,
        $1:"CONTRIBUTING FACTOR VEHICLE 1"::STRING AS CONTRIBUTING_FACTOR_VEHICLE_1,
        $1:"CONTRIBUTING FACTOR VEHICLE 2"::STRING AS CONTRIBUTING_FACTOR_VEHILCE_2,
        $1:"CRASH DATE"::STRING AS CRASH_DATE,
        $1:"CRASH DATETIME"::TIMESTAMP_NTZ AS CRASH_DATETIME,
        $1:"CRASH TIME"::STRING AS CRASH_TIME,
        $1:"DAY OF MONTH"::INTEGER AS DAY_OF_MONTH,
        $1:"DAY OF WEEK"::STRING AS DAY_OF_WEEK,
        $1:"INJURY OR FATALITY"::BOOLEAN AS INJURY_OR_FATALITY,
        $1:"IS WEEKEND"::BOOLEAN AS IS_WEEKEND,
        $1:"LATITUDE"::FLOAT AS LATITUDE,
        $1:"LOCATION"::STRING AS LOCATION,
        $1:"LONGITUDE"::FLOAT AS LONGITUDE,
        $1:"NUMBER OF CYCLIST INJURED"::INTEGER AS NUMBER_OF_CYCLIST_INJURED,
        $1:"NUMBER OF CYCLIST KILLED"::INTEGER AS NUMBER_OF_CYCLIST_KILLED,
        $1:"NUMBER OF MOTORIST INJURED"::INTEGER AS NUMBER_OF_MOTORIST_INJURED,
        $1:"NUMBER OF MOTORIST KILLED"::INTEGER AS NUMBER_OF_MOTORIST_KILLED,
        $1:"NUMBER OF PEDESTRIANS INJURED"::INTEGER AS NUMBER_OF_PEDESTRIANS_INJURED,
        $1:"NUMBER OF PEDESTRIANS KILLED"::INTEGER AS NUMBER_OF_PEDESTRIANS_KILLED,
        $1:"NUMBER OF PERSONS INJURED"::INTEGER AS NUMBER_OF_PERSONS_INJURED,
        $1:"NUMBER OF PERSONS KILLED"::INTEGER AS NUMBER_OF_PERSONS_KILLED,
        $1:"TOTAL FATALITIES"::INTEGER AS TOTAL_FATALITIES,
        $1:"TOTAL INJURIES"::INTEGER AS TOTAL_INJURIES,
        $1:"VEHICLE TYPE CODE 1"::STRING AS VEHICLE_TYPE_CODE_1,
        $1:"VEHICLE TYPE CODE 2"::STRING AS VEHICLE_TYPE_CODE_2,
        METADATA$FILENAME AS source_filename
    FROM @GROUP4_CAPSTONE_ACCIDENT_DATA_AWS_STAGE
    (FILE_FORMAT => 'parquet_format', PATTERN => '.*parquet.*');

    SELECT *
    FROM CAPSTONE_DE.GROUP_4.ACCIDENT_STAGING
    LIMIT 10;

    BOROUGH STRING,
    COLLISION_ID INTEGER,
    CONTRIBUTING_FACTOR_VEHICLE_1 STRING,
    CONTRIBUTING_FACTOR_VEHILCE_2 STRING,
    CRASH_DATE STRING,
    CRASH_DATETIME TIMESTAMP_NTZ,
    CRASH_TIME STRING,
    DAY_OF_MONTH INTEGER,
    DAY_OF_WEEK STRING,
    INJURY_OR_FATALITY BOOLEAN,
    IS_WEEKEND BOOLEAN,
    LATITUDE FLOAT,
    LOCATION STRING,
    LONGITUDE FLOAT,
    NUMBER_OF_CYCLIST_INJURED INTEGER,
    NUMBER_OF_CYCLIST_KILLED INTEGER,
    NUMBER_OF_MOTORIST_INJURED INTEGER,
    NUMBER_OF_MOTORIST_KILLED INTEGER,
    NUMBER_OF_PEDESTRIANS_INJURED INTEGER,
    NUMBER_OF_PEDESTRIANS_KILLED INTEGER,
    NUMBER_OF_PERSONS_INJURED INTEGER,
    NUMBER_OF_PERSONS_KILLED INTEGER,
    TOTAL_FATALITIES INTEGER,
    TOTAL_INJURIES INTEGER,
    VEHICLE_TYPE_CODE_1 STRING,
    VEHICLE_TYPE_CODE_2 STRING,
    PARTITION_YEAR STRING,
    PARTITION_MONTH STRING;

CREATE OR REPLACE TABLE CAPSTONE_DE.GROUP_4.ACCIDENT_DATA (
    BOROUGH STRING,
    COLLISION_ID INTEGER,
    CONTRIBUTING_FACTOR_VEHICLE_1 STRING,
    CONTRIBUTING_FACTOR_VEHILCE_2 STRING,
    CRASH_DATE STRING,
    CRASH_DATETIME TIMESTAMP_NTZ,
    CRASH_TIME STRING,
    DAY_OF_MONTH INTEGER,
    DAY_OF_WEEK STRING,
    INJURY_OR_FATALITY BOOLEAN,
    IS_WEEKEND BOOLEAN,
    LATITUDE FLOAT,
    LOCATION STRING,
    LONGITUDE FLOAT,
    NUMBER_OF_CYCLIST_INJURED INTEGER,
    NUMBER_OF_CYCLIST_KILLED INTEGER,
    NUMBER_OF_MOTORIST_INJURED INTEGER,
    NUMBER_OF_MOTORIST_KILLED INTEGER,
    NUMBER_OF_PEDESTRIANS_INJURED INTEGER,
    NUMBER_OF_PEDESTRIANS_KILLED INTEGER,
    NUMBER_OF_PERSONS_INJURED INTEGER,
    NUMBER_OF_PERSONS_KILLED INTEGER,
    TOTAL_FATALITIES INTEGER,
    TOTAL_INJURIES INTEGER,
    VEHICLE_TYPE_CODE_1 STRING,
    VEHICLE_TYPE_CODE_2 STRING,
    PARTITION_YEAR STRING,
    PARTITION_MONTH STRING
);

INSERT INTO CAPSTONE_DE.GROUP_4.ACCIDENT_DATA(
    BOROUGH,
    COLLISION_ID,
    CONTRIBUTING_FACTOR_VEHICLE_1,
    CONTRIBUTING_FACTOR_VEHILCE_2,
    CRASH_DATE,
    CRASH_DATETIME,
    CRASH_TIME,
    DAY_OF_MONTH,
    DAY_OF_WEEK,
    INJURY_OR_FATALITY,
    IS_WEEKEND,
    LATITUDE,
    LOCATION,
    LONGITUDE,
    NUMBER_OF_CYCLIST_INJURED,
    NUMBER_OF_CYCLIST_KILLED,
    NUMBER_OF_MOTORIST_INJURED,
    NUMBER_OF_MOTORIST_KILLED,
    NUMBER_OF_PEDESTRIANS_INJURED,
    NUMBER_OF_PEDESTRIANS_KILLED,
    NUMBER_OF_PERSONS_INJURED,
    NUMBER_OF_PERSONS_KILLED,
    TOTAL_FATALITIES,
    TOTAL_INJURIES,
    VEHICLE_TYPE_CODE_1,
    VEHICLE_TYPE_CODE_2,
    PARTITION_YEAR,
    PARTITION_MONTH
)
SELECT
    BOROUGH,
    COLLISION_ID,
    CONTRIBUTING_FACTOR_VEHICLE_1,
    CONTRIBUTING_FACTOR_VEHILCE_2,
    CRASH_DATE,
    CRASH_DATETIME,
    CRASH_TIME,
    DAY_OF_MONTH,
    DAY_OF_WEEK,
    INJURY_OR_FATALITY,
    IS_WEEKEND,
    LATITUDE,
    LOCATION,
    LONGITUDE,
    NUMBER_OF_CYCLIST_INJURED,
    NUMBER_OF_CYCLIST_KILLED,
    NUMBER_OF_MOTORIST_INJURED,
    NUMBER_OF_MOTORIST_KILLED,
    NUMBER_OF_PEDESTRIANS_INJURED,
    NUMBER_OF_PEDESTRIANS_KILLED,
    NUMBER_OF_PERSONS_INJURED,
    NUMBER_OF_PERSONS_KILLED,
    TOTAL_FATALITIES,
    TOTAL_INJURIES,
    VEHICLE_TYPE_CODE_1,
    VEHICLE_TYPE_CODE_2,
    REGEXP_SUBSTR(source_filename, 'YEAR=(\\d{4})') AS PARTITION_YEAR,
    REGEXP_SUBSTR(source_filename, 'MONTH=(\\d{2})') AS PARTITION_MONTH 
FROM CAPSTONE_DE.GROUP_4.ACCIDENT_STAGING;

SELECT *
FROM CAPSTONE_DE.GROUP_4.ACCIDENT_DATA
LIMIT 10;


--Which borough gets the most accidents?
SELECT BOROUGH, 
       COUNT(*),
       --count which borough gets more accidents
       --count which borough deals 
FROM CAPSTONE_DE.GROUP_4.ACCIDENT_DATA
GROUP BY BOROUGH;

--What are the biggest causes of accidents?
SELECT CONTRIBUTING_FACTOR_VEHICLE_1, COUNT(*) TYPE_OF_ACCIDENT
FROM CAPSTONE_DE.GROUP_4.ACCIDENT_DATA
GROUP BY CONTRIBUTING_FACTOR_VEHICLE_1
ORDER BY TYPE_OF_ACCIDENT DESC
LIMIT 6;

SELECT Z.BOROUGH, Z.LOCATIONID, Z.ZONE, A.CONTRIBUTING_FACTOR_VEHICLE_1
FROM CAPSTONE_DE.GROUP_4.ACCIDENT_DATA A
JOIN CAPSTONE_DE.GROUP_4.ZONE_TAXI_DATA Z
ON A.BOROUGH = Z.BOROUGH
WHERE A.CONTRIBUTING_FACTOR_VEHICLE_1 != 'Unspecified';



SELECT G.DAY_OF_MONTH, A.BOROUGH, A.CONTRIBUTING_FACTOR_VEHICLE_1
FROM CAPSTONE_DE.GROUP_4.ACCIDENT_DATA A
JOIN CAPSTONE_DE.GROUP_4.GREEN_TAXI_DATA G
ON A.DAY_OF_MONTH = G.DAY_OF_MONTH;

SELECT DISTINCT DAY_OF_MONTH
FROM CAPSTONE_DE.GROUP_4.ACCIDENT_DATA
ORDER BY DAY_OF_MONTH;

SELECT DISTINCT DAY_OF_MONTH
FROM CAPSTONE_DE.GROUP_4.GREEN_TAXI_DATA
ORDER BY DAY_OF_MONTH;

SELECT DISTINCT G.DAY_OF_MONTH
FROM CAPSTONE_DE.GROUP_4.ACCIDENT_DATA A
JOIN CAPSTONE_DE.GROUP_4.GREEN_TAXI_DATA G
ON A.DAY_OF_MONTH = G.DAY_OF_MONTH
ORDER BY DAY_OF_MONTH;





CREATE OR REPLACE VIEW CAPSTONE_DE.GROUP_4.ACCIDENT_RANKED_VW (
    BOROUGH,
    ACCIDENT_TYPE, 
    TOTAL_ACCIDENTS,
    RANK
) AS (
    WITH ranked_accident AS(
        SELECT BOROUGH, 
               CONTRIBUTING_FACTOR_VEHICLE_1 ACCIDENT_TYPE, 
               COUNT(*) TOTAL_ACCIDENTS,
               RANK() OVER (PARTITION BY BOROUGH ORDER BY TOTAL_ACCIDENTS DESC) AS RANK
        FROM CAPSTONE_DE.GROUP_4.ACCIDENT_DATA
        GROUP BY BOROUGH, CONTRIBUTING_FACTOR_VEHICLE_1
    )
    SELECT BOROUGH,
           ACCIDENT_TYPE, 
           TOTAL_ACCIDENTS,
           RANK
    FROM ranked_accident
    WHERE rank <= 5
);
